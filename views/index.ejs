<%- include('partials/header.ejs'); -%>

<div class="input-block">


    <input type="text" list="opponents" id="opponent-input" placeholder="Enter your opponent">
    
    <datalist id="opponents">

    </datalist>
    <!-- <input type="text" id="oponent-input" placeholder="Enter your oponent"> -->


    <input type="text" id="character-input" placeholder="Enter your oponents character">

    

    <button id="character-send" class="button">
        Add character
    </button>
</div>  

<button id="start-game" class="button">
    Start Game
</button>

<pre id="messages"></pre>


<script>

    const oponentNameInput = document.getElementById('opponent-input');
    const opponentsList = document.getElementById('opponents');

    const characterInput = document.getElementById('character-input');

    const characterSend = document.getElementById('character-send');
    const startGame = document.getElementById('start-game')

    const messages = document.getElementById('messages');


    const ws = new WebSocket('wss://heads-up-poui.onrender.com'); //ws://localhost:3000

    var playerName = '<=% name %>';
    var oponentNames = [];
    var messagesCount = 0;

    ws.onopen = () => {
        playerName = "<%= name %>";  // The name is passed from the server-side EJS rendering
        console.log(`IMIEEEEEEE ${playerName}`)
        // ws.send(JSON.stringify({ playerName }));
    };

    startGame.addEventListener('click', () => {
        startGame.style.display = 'none';
        messages.style.display = 'flex';

        // broadcast the start of the game
        ws.send(JSON.stringify("start-game"));
    });

    characterSend.addEventListener('click', () => {
        const val = {
            oponentName: oponentNameInput?.value,
            character: characterInput?.value,
        };

        const form = document.querySelector('.input-block');
        if (form) {
            form.style.display = 'none';
        }
        console.log("co jest kurwa")
        startGame.style.display = 'block';
        console.log("co jest kurwa2")

        oponentNames.push(oponentNameInput?.value)

        if (!val) {
            console.log("cos zjebane w if(!val)");
            return;
        } else if (!ws) {
            showMessage('No WebSocket connection');
            return;
        }

        console.log("clicked");
        ws.send(JSON.stringify(val));
        createMessageDiv(val.oponentName, val.character);
    }); 

    ws.onmessage = (event) => {
        console.log("Broadcast received");
        var object = JSON.parse(event.data);
        console.log(`obiekt = ${object}`);

        // Check if the player is the same as the current player or another player
        console.log(messagesCount);
        // If this is the first message, insert the name into playerName
        // if (messagesCount === 0) {
        //     playerName = object;
        //     messagesCount++;
        //     console.log(playerName);
        // } else 
        if (playerName === object.oponentName) {
            console.log(`watttt ${object.oponentName}`);
            createMessageDiv(object.oponentName, "???????");
        } else if (object === 'start-game'){
            startGame.style.display = 'none';
            messages.style.display = 'flex';
        } else {
            createMessageDiv(object.oponentName, object.character);
            oponentNames.push(object.oponentName);
        }
        console.log(oponentNames);
        console.log(playerName);
    };

    function createMessageDiv(oponentName, character) {
        // Create a new div element
        const messageDiv = document.createElement('div');

        // Set the content of the div
        messageDiv.textContent = `${oponentName} - ${character}`;

        // Optionally, add a class for styling
        messageDiv.classList.add('message');

        // Append the new div to the messages container
        messages.appendChild(messageDiv);
        console.log(`dodaje do diva ${oponentName} - ${character}`);
    }

    function createOptionElement(oponentName){
        const option = document.createElement('option')

        option.value = `${oponentName}`
        opponentsList.appendChild(option);
    }

    function showMessage(message) {
        messages.textContent += `\n${message}`;
    }
</script>

<%- include('partials/footer.ejs'); -%>
